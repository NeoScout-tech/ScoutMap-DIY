name: Build and Release Firmware

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install PlatformIO
      run: |
        pip install --user platformio
        pio --version

    - name: Build firmwares
      run: |
        pio run -e esp32c3_supermini
        pio run -e nodemcuv2
        
    - name: Prepare artifacts
      run: |
        mkdir -p artifacts
        cp .pio/build/esp32c3_supermini/firmware.bin artifacts/esp32-c3.bin
        cp .pio/build/nodemcuv2/firmware.bin artifacts/esp8266.bin
        
    - name: Verify firmware sizes
      run: |
        echo "ESP32-C3 size: $(stat -c%s artifacts/esp32-c3.bin) bytes"
        echo "ESP8266 size: $(stat -c%s artifacts/esp8266.bin) bytes"
        [ $(stat -c%s artifacts/esp32-c3.bin) -le 1048576 ] || (echo "ESP32-C3 too large"; exit 1)
        [ $(stat -c%s artifacts/esp8266.bin) -le 1048576 ] || (echo "ESP8266 too large"; exit 1)

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-binaries
        path: artifacts/*
        retention-days: 5

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/*
        name: Release ${{ github.ref_name }}
        body: |
          Automated firmware release
          - Version: ${{ github.ref_name }}
          - Build date: $(date -u +'%Y-%m-%d %H:%M:%S')
          - Commit: ${{ github.sha }}
          Includes:
          - ESP32-C3 SuperMini firmware
          - ESP8266 firmware
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}